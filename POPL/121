#lang racket

(define noun-list (list 'dog 'cat 'student 'professor 'book 'computer))
(define verb-list (list 'ran 'ate 'slept 'drank 'exploded 'decomposed))
(define adjective-list (list 'red 'slow 'dead 'pungent 'over-paid 'drunk))
(define adverb-list (list 'quickly 'slowly 'wickedly 'majestically))
(define article-list (list 'a 'the))

(define (pick-random lst)
  (list (list-ref lst (random 6)))
)

(define (either a b)
  (if (= (random 2) 0) (a) (b))
)

(define (an-article)
  (list (list-ref article-list (random 2)))
)

(define (a-noun) 
  (pick-random noun-list)
)

(define (an-adverb) (sentence)
  (pick-random adverb-list)
)

(define (a-verb) 
  (pick-random verb-list)
)

(define (an-adjective) 
  (pick-random adjective-list)
)

(define (adjectival-phrase) (append (an-adjective) (noun-phrase)))

(define (adjective-phrase) 
  (an-adjective)
)

(define (noun-phrase)
  (either a-noun adjectival-phrase)
)

(define (verb-phrase) (a-verb))

(define (sentence) 
  (append (append (an-article) (noun-phrase)) (verb-phrase))
)